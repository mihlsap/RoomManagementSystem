services:
  db:
    image: postgres:latest
    container_name: db_rms
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE:
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5436:5432"
    restart: always

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak_rms
    command:
      - start-dev
    ports:
      - "8085:8080"
    volumes:
      - ./keycloak/:/opt/keycloak/data/import/
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: db
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak_rms
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
#      KC_HTTP_PORT: 8085
#      KC_HOSTNAME_URL: http://localhost:8080
#      KC_HOSTNAME_ADMIN_URL: http://localhost:8080
#      KC_HOSTNAME_STRICT_BACKCHANNEL: true
#      KC_HTTP_RELATIVE_PATH: /
#      KC_HTTP_ENABLED: true
#      KC_HEALTH_ENABLED: true
#      KC_METRICS_ENABLED: true
    depends_on:
      - db
    networks:
      - app-network
    restart: always
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
#    healthcheck:
#      test: [ 'CMD-SHELL',
#              '[ -f /tmp/HealthCheck.java ]
#              || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable {
#              System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0])
#              .openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java
#              http://localhost:8085/auth/health/live' ]
#      interval: 5s
#      timeout: 5s
#      retries: 20

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
