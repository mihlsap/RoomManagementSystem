services:
  db:
    image: postgres:latest
    container_name: db_rms
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE:
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5436:5432"
    restart: always

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command:
      - start-dev
    ports:
      - "8085:8080"
    volumes:
      - ./keycloak/:/opt/keycloak/data/import/
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: db
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak_rms
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
    depends_on:
      - db
    networks:
      - app-network
    restart: always

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rms_app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/rms
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/RoomManagementSystem
    depends_on:
      db:
        condition: service_started
        restart: true
      keycloak:
        condition: service_started
        restart: true
    networks:
      - app-network
    ports:
      - "8080:8080"

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
